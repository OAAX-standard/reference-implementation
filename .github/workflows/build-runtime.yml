name: Build OAAX runtime

on:
  push:
    # branches:
    #   - main

jobs:
  # build-runtimes-for-ubuntu:
  #   timeout-minutes: 10  # Set a timeout of 10 minutes for the job
  #   runs-on: self-hosted
  #   container:
  #     image: ubuntu:22.04  # or any other image

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 1

  #     - name: Install s3cmd
  #       run: |
  #         apt-get update
  #         apt-get install -y s3cmd

  #     - name: Configure s3cmd
  #       run: |
  #         cat > ~/.s3cfg <<EOF
  #         [default]
  #         access_key = ${{ secrets.S3_ACCESS_KEY }}
  #         secret_key = ${{ secrets.S3_SECRET_KEY }}
  #         bucket_location = us-east-1
  #         host_base = ${{ secrets.S3_ENDPOINT_URL }}
  #         host_bucket = %(bucket)s.${{ secrets.S3_ENDPOINT_URL }}
  #         use_https = True
  #         EOF

  #     - name: Set up environment
  #       run: bash scripts/setup-env.sh

  #     - name: Cross-compile runtimes
  #       run: bash runtime-library/build-runtimes.sh

  #     - name: Determine version
  #       run: |
  #         if [ -f VERSION ]; then
  #           version=$(cat VERSION)
  #         else
  #           exit 1
  #         fi
  #         echo "version=$version" >> $GITHUB_ENV

  #     - name: Upload runtimes to S3
  #       run: |
  #         bash scripts/upload-to-storage.sh "runtimes/${{ env.version }}/CPU" runtime-library/artifacts/*.gz

  build-runtimes-for-windows-x86_64:
    timeout-minutes: 10  # Set a timeout of 10 minutes for the job
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          submodules: 'recursive'
          lfs: true
      - name: Install AWS CLI (verify)
        run: aws --version
      - name: Compile runtime
        run: |
          cd runtime-library
          .\build-runtime.bat
      - name: Determine version
        id: version
        shell: pwsh
        run: |
          if (Test-Path VERSION) {
            $version = Get-Content VERSION
            echo "version=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          } else {
            throw "VERSION file missing"
          }
      - name: Upload runtimes to Custom S3-Compatible Bucket
        shell: pwsh
        run: |
          $version = $env:version
          $endpoint = "https://${{ secrets.S3_ENDPOINT_URL }}"
          $bucket = "oaax"
          $accessKey = "${{ secrets.S3_ACCESS_KEY }}"
          $secretKey = "${{ secrets.S3_SECRET_KEY }}"

          # Configure AWS CLI to use custom endpoint
          aws configure set aws_access_key_id $accessKey
          aws configure set aws_secret_access_key $secretKey
          aws configure set default.region us-east-1

          $files = Get-ChildItem -Path runtime-library\artifacts\*.gz
          foreach ($file in $files) {
            aws s3 cp `
              $file.FullName `
              "s3://$bucket/runtimes/$version/CPU/Windows/x86_64/$($file.Name)" `
              --endpoint-url $endpoint `
              --region us-east-1
          }
            
  